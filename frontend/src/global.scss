// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.elevation-classes();
@include mat.app-background();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$app-primary: mat.m2-define-palette(mat.$m2-indigo-palette);
$app-accent: mat.m2-define-palette(mat.$m2-pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$app-warn: mat.m2-define-palette(mat.$m2-red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-theme: mat.m2-define-light-theme((color: (primary: $app-primary,
        accent: $app-accent,
        warn: $app-warn,
      )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-theme);

/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import '@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

@import "primeicons/primeicons.css";

.expense-modal {
  --width: 80%;
  --height: 70%;
  --border-color: rgb(79, 171, 79);
  --border-width: 2px;
  --border-style: solid;
  --border-radius: 15px;

  @media only screen and (max-width: 800px) {
    --width: 100%;
    --height: 100%;
  }
}

.edit-row-modal {
  --border-color: rgb(79, 171, 79);
  --border-width: 2px;
  --border-style: solid;
  --border-radius: 15px;
  --height: 98vh;
  --width: 345px;
}

.edit-supplier {
  --border-color: rgb(79, 171, 79);
  --border-width: 2px;
  --border-style: solid;
  --border-radius: 15px;
  --height: 90%;
  --width: 275px;

}

.vatReport-modal {
  --border-color: red;
  --border-width: 2px;
  --border-style: solid;
  --border-radius: 15px;
  --height: 100px;
  --width: 275px;
}

.popup-select {
  --border-color: rgb(79, 171, 79);
  --border-width: 2px;
  --border-style: solid;
  --border-radius: 15px;
  --height: 150px;
  --width: 275px;
}

.ion-toast {
  --border-width: 2px;
  --box-shadow: 3px 3px 10px 0 rgba(0, 0, 0, 0.2);
  --color: black;
  --border-style: solid;
  --border-color: rgb(1, 1, 1);
  font-style: italic;

  &.success {
    --background: green;
  }

  &.error {
    --background: red;

  }
}
// ======================== primeNG
.p-button {
  &.big {
    width: 200px;
  }

  &.small {
    width: 120px;
  }

  &.x_small {
    width: 100px;
  }

  &.icon {
    width: 35px;
    height: 25px;
  }

  &.auto {
    width: auto;
    min-width: max-content;
  }

  &.yellow {
    background-color: rgba(246, 255, 172, 0.8);
    border-color: rgba(246, 255, 172, 0.8);
    color: gray;
    &.yellow:hover {
      background-color: rgba(246, 255, 172, 1);
      border-color: rgba(246, 255, 172, 1);
      color: gray
    }
  }

  &.black {
    background-color: black;
    border-color: black;
    color: white;
    &.black:hover {
      background-color: #333;
      border-color: #333;
      color: white;
    }
  }

  &.white {
    background-color: white;
    border-color: white;
    color: black;
    &.white:hover {
      background-color: white;
      border-color: white;
      color: black;
    }
  }

  &.transparent {
    background-color: transparent;
    border-color: transparent;
    color: rgb(42, 38, 38);
    &.transparent:hover {
      background-color: transparent;
      border-color: transparent;
      color: rgb(42, 38, 38);
    }
  }

  &.outlined {
    background-color: white;
    border-color: rgb(186, 183, 183);
    color: black;
    &.outlined:hover {
      background-color: transparent;
      border-color: rgb(186, 183, 183);
      color: black;
    }
  }

  &.disabled {
    background-color: #e0e0e0;
    border-color: #e0e0e0;
    color: white;
    cursor: not-allowed;
    &.disabled:hover {
      background-color: #e0e0e0;
      border-color: #e0e0e0;
      color: 'white';
    }
  }
}

.p-button-text.p-button-info:hover { // for avoid the shadow of button text
  background-color: transparent !important;
}

.p-drawer-footer { // for footer of left panel
  box-shadow: 0 -4px 8px -4px rgba(0, 0, 0, 0.2);
}

.p-select { //For select input
  border-radius: 20px !important;
  border-color: rgb(245 242 242) !important;
  &.wide {
    width: 420px !important;
  }
  &.auto {
    width: auto;
  }
  &.normal {
    width: 215px;
  }

  &.narrow {
    width: 120px;
  }
}

.p-inputtext { //For text input
  border-color: rgb(245 242 242) !important;
  border: none !important;
  padding-inline: 0 !important;
  border-bottom: 1px solid gray !important;
  border-radius: 0px !important;
  &.wide {
    width: 420px !important;
  }
  &.auto {
    width: auto;
  }
  &.normal {
    width: 215px;
  }
  
}

input.p-inputtext::placeholder {
  color: gray !important;       /* your desired color */
  opacity: 1;           /* ensure full opacity if needed */
}
 